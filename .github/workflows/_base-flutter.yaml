name: "[base] Flutter"

on:
  workflow_call:
    inputs:
      path:
        required: false
        type: string
        default: '.'

jobs:
  install:
    name: "install"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: "Get dependencies"
        run: flutter pub get
        working-directory: ${{ inputs.path }}

  format:
    name: "format"
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v5
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: "Get dependencies"
        run: flutter pub get
        working-directory: ${{ inputs.path }}

      - name: "dart format"
        run: |
          echo "Checking Dart formatting...\nFiles displayed below:"
          dart format --set-exit-if-changed .
          echo "No formatting issues found."
        working-directory: ${{ inputs.path }}

  analyze:
    name: "analyze"
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v5
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: "Get dependencies"
        run: flutter pub get
        working-directory: ${{ inputs.path }}

      - name: Run analysis
        run: flutter analyze --fatal-warnings
        working-directory: ${{ inputs.path }}

  check-tests:
    name: "check tests"
    runs-on: ubuntu-latest
    outputs:
      do_tests: ${{ steps.check-tests.outputs.do_tests }}
    steps:
      - uses: actions/checkout@v5
      # Skip if no test directory
      - id: check-tests
        run: |
          if [ ! -d "${{ inputs.path }}/test" ]; then
            echo "No test directory found, skipping tests.";
            do_tests=0
          else
            echo "Test directory found, will run tests.";
            do_tests=1
          fi
          echo "do_tests=$do_tests" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: [install, check-tests]
    if: needs.check-tests.outputs.do_tests == 1

    steps:
      - uses: actions/checkout@v5
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: "Get dependencies"
        run: flutter pub get
        working-directory: ${{ inputs.path }}

      - name: Run tests
        run: flutter test --reporter=expanded test/*.dart
        working-directory: ${{ inputs.path }}
